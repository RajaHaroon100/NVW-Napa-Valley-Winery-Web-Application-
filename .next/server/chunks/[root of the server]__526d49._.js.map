{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/lib/dbConnect.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGO_URI = process.env.MONGODB_URI || process.env.NEXT_PUBLIC_MONGO_URI || \"\";\r\n\r\nlet isConnected = false;\r\n\r\nexport async function dbConnect() {\r\n  if (isConnected) return;\r\n\r\n  try {\r\n    if (!MONGO_URI) {\r\n      throw new Error(\"MongoDB URI is not set. Please define MONGODB_URI in .env.local\");\r\n    }\r\n    await mongoose.connect(MONGO_URI, {\r\n      dbName: \"nvw\",\r\n      bufferCommands: false,\r\n    });\r\n    isConnected = true;\r\n    console.log(\"✅ MongoDB Connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB Connection Error:\", error);\r\n    process.exit(1);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,WAAW,yEAAyC;AAElF,IAAI,cAAc;AAEX,eAAe;IACpB,IAAI,aAAa;IAEjB,IAAI;QACF,uCAAgB;;QAEhB;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,WAAW;YAChC,QAAQ;YACR,gBAAgB;QAClB;QACA,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,QAAQ,IAAI,CAAC;IACf;AACF"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/lib/auth.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nconst SECRET = process.env.JWT_SECRET || process.env.NEXT_PUBLIC_JWT_SECRET || \"\";\r\n\r\nexport function createToken(userId: string, role?: string) {\r\n  if (!SECRET) {\r\n    throw new Error(\"JWT secret is not set. Please define JWT_SECRET in .env.local\");\r\n  }\r\n  return jwt.sign({ userId, role }, SECRET, { expiresIn: \"7d\" });\r\n}\r\n\r\nexport async function setTokenCookie(token: string) {\r\n  const cookie = await cookies();\r\n  cookie.set(\"token\", token, {\r\n    httpOnly: true,\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    maxAge: 60 * 60 * 24 * 7,\r\n    path: \"/\",\r\n  });\r\n}\r\n\r\nexport async function getUserIdFromToken() {\r\n  const cookie = await cookies();\r\n  const token = cookie.get(\"token\")?.value;\r\n  if (!token) return null;\r\n\r\n  try {\r\n    if (!SECRET) {\r\n      return null;\r\n    }\r\n    const decoded = jwt.verify(token, SECRET) as { userId: string };\r\n    return decoded.userId;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function removeToken() {\r\n  const cookie = await cookies();\r\n  cookie.set(\"token\", \"\", { maxAge: -1 });\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,iDAA0C;AAExE,SAAS,YAAY,MAAc,EAAE,IAAa;IACvD,uCAAa;;IAEb;IACA,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE;QAAQ;IAAK,GAAG,QAAQ;QAAE,WAAW;IAAK;AAC9D;AAEO,eAAe,eAAe,KAAa;IAChD,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3B,OAAO,GAAG,CAAC,SAAS,OAAO;QACzB,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ,KAAK,KAAK,KAAK;QACvB,MAAM;IACR;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3B,MAAM,QAAQ,OAAO,GAAG,CAAC,UAAU;IACnC,IAAI,CAAC,OAAO,OAAO;IAEnB,IAAI;QACF,uCAAa;;QAEb;QACA,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,OAAO,QAAQ,MAAM;IACvB,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3B,OAAO,GAAG,CAAC,SAAS,IAAI;QAAE,QAAQ,CAAC;IAAE;AACvC"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/models/user.model.ts"],"sourcesContent":["import { Schema, model, models, Document, Model } from \"mongoose\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nexport interface IUser {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  createdAt: Date;\r\n  role: string;\r\n  comparePassword(candidatePassword: string): Promise<boolean>;\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>(\r\n  {\r\n    name: { type: String, required: true, trim: true },\r\n    email: { type: String, required: true, unique: true, trim: true, lowercase: true },\r\n    password: { type: String, required: true },\r\n    role: { type: String, default: \"winery\", enum: [\"admin\", \"winery\"] },\r\n    createdAt: { type: Date, default: Date.now },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nUserSchema.pre(\"save\", async function (next) {\r\n  if (!this.isModified(\"password\")) return next();\r\n  try {\r\n    const salt = await bcrypt.genSalt(10);\r\n    this.password = await bcrypt.hash(this.password, salt);\r\n    next();\r\n  } catch (err: any) {\r\n    next(err);\r\n  }\r\n});\r\n\r\nUserSchema.methods.comparePassword = async function (candidatePassword: string) {\r\n  return bcrypt.compare(candidatePassword, this.password);\r\n};\r\n\r\nconst User: Model<IUser> = models.User || model<IUser>(\"User\", UserSchema);\r\n\r\nexport default User;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAWA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;QAAM,MAAM;IAAK;IACjD,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;QAAM,MAAM;QAAM,WAAW;IAAK;IACjF,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,MAAM;QAAE,MAAM;QAAQ,SAAS;QAAU,MAAM;YAAC;YAAS;SAAS;IAAC;IACnE,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C,GACA;IAAE,YAAY;AAAK;AAGrB,WAAW,GAAG,CAAC,QAAQ,eAAgB,IAAI;IACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,OAAO;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,qGAAA,CAAA,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QACjD;IACF,EAAE,OAAO,KAAU;QACjB,KAAK;IACP;AACF;AAEA,WAAW,OAAO,CAAC,eAAe,GAAG,eAAgB,iBAAyB;IAC5E,OAAO,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,QAAQ;AACxD;AAEA,MAAM,OAAqB,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAS,QAAQ;uCAEhD"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/app/api/me/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { dbConnect } from \"@/lib/dbConnect\";\r\nimport { getUserIdFromToken } from \"@/lib/auth\";\r\nimport User from \"@/models/user.model\";\r\nimport { Types } from \"mongoose\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    await dbConnect();\r\n\r\n    const userId =await getUserIdFromToken();    \r\n    if (!userId) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const user = await User.findById(userId).select(\"-password\");\r\n    if (!user) {\r\n      return NextResponse.json({ error: \"User not found\" }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ user }, { status: 200 });\r\n  } catch (error: any) {\r\n    console.log({ error });\r\n\r\n    return NextResponse.json({ error: error.message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;QAEd,MAAM,SAAQ,MAAM,CAAA,GAAA,oHAAA,CAAA,qBAAkB,AAAD;QACrC,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,OAAO,MAAM,gIAAA,CAAA,UAAI,CAAC,QAAQ,CAAC,QAAQ,MAAM,CAAC;QAChD,IAAI,CAAC,MAAM;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiB,GAAG;gBAAE,QAAQ;YAAI;QACtE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAK,GAAG;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,OAAY;QACnB,QAAQ,GAAG,CAAC;YAAE;QAAM;QAEpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACnE;AACF"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}