{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/lib/auth.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nconst SECRET = process.env.JWT_SECRET || process.env.NEXT_PUBLIC_JWT_SECRET || \"\";\r\n\r\nexport function createToken(userId: string, role?: string) {\r\n  if (!SECRET) {\r\n    throw new Error(\"JWT secret is not set. Please define JWT_SECRET in .env.local\");\r\n  }\r\n  return jwt.sign({ userId, role }, SECRET, { expiresIn: \"7d\" });\r\n}\r\n\r\nexport async function setTokenCookie(token: string) {\r\n  const cookie = await cookies();\r\n  cookie.set(\"token\", token, {\r\n    httpOnly: true,\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    maxAge: 60 * 60 * 24 * 7,\r\n    path: \"/\",\r\n  });\r\n}\r\n\r\nexport async function getUserIdFromToken() {\r\n  const cookie = await cookies();\r\n  const token = cookie.get(\"token\")?.value;\r\n  if (!token) return null;\r\n\r\n  try {\r\n    if (!SECRET) {\r\n      return null;\r\n    }\r\n    const decoded = jwt.verify(token, SECRET) as { userId: string };\r\n    return decoded.userId;\r\n  } catch {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function removeToken() {\r\n  const cookie = await cookies();\r\n  cookie.set(\"token\", \"\", { maxAge: -1 });\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,SAAS,QAAQ,GAAG,CAAC,UAAU,iDAA0C;AAExE,SAAS,YAAY,MAAc,EAAE,IAAa;IACvD,uCAAa;;IAEb;IACA,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE;QAAQ;IAAK,GAAG,QAAQ;QAAE,WAAW;IAAK;AAC9D;AAEO,eAAe,eAAe,KAAa;IAChD,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3B,OAAO,GAAG,CAAC,SAAS,OAAO;QACzB,UAAU;QACV,QAAQ,oDAAyB;QACjC,QAAQ,KAAK,KAAK,KAAK;QACvB,MAAM;IACR;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3B,MAAM,QAAQ,OAAO,GAAG,CAAC,UAAU;IACnC,IAAI,CAAC,OAAO,OAAO;IAEnB,IAAI;QACF,uCAAa;;QAEb;QACA,MAAM,UAAU,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAClC,OAAO,QAAQ,MAAM;IACvB,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3B,OAAO,GAAG,CAAC,SAAS,IAAI;QAAE,QAAQ,CAAC;IAAE;AACvC"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/lib/dbConnect.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGO_URI = process.env.MONGODB_URI || process.env.NEXT_PUBLIC_MONGO_URI || \"\";\r\n\r\nlet isConnected = false;\r\n\r\nexport async function dbConnect() {\r\n  if (isConnected) return;\r\n\r\n  try {\r\n    if (!MONGO_URI) {\r\n      throw new Error(\"MongoDB URI is not set. Please define MONGODB_URI in .env.local\");\r\n    }\r\n    await mongoose.connect(MONGO_URI, {\r\n      dbName: \"nvw\",\r\n      bufferCommands: false,\r\n    });\r\n    isConnected = true;\r\n    console.log(\"✅ MongoDB Connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB Connection Error:\", error);\r\n    process.exit(1);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,WAAW,yEAAyC;AAElF,IAAI,cAAc;AAEX,eAAe;IACpB,IAAI,aAAa;IAEjB,IAAI;QACF,uCAAgB;;QAEhB;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,WAAW;YAChC,QAAQ;YACR,gBAAgB;QAClB;QACA,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,QAAQ,IAAI,CAAC;IACf;AACF"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/models/booking.model.ts"],"sourcesContent":["import mongoose, { Schema, model, models } from \"mongoose\";\r\n\r\ninterface FoodPairing {\r\n  name: string;\r\n  price: number;\r\n}\r\n\r\ninterface WineryBooking {\r\n  wineryId: mongoose.Types.ObjectId;\r\n  datetime: Date;\r\n  tasting: number | null;\r\n  tour: number | null;\r\n  foodPairings: FoodPairing[];\r\n}\r\nconst foodPairingSchema = new Schema<FoodPairing>(\r\n  {\r\n    name: { type: String, required: true },\r\n    price: { type: Number, required: true, default: 0 },\r\n  },\r\n  { _id: false }\r\n);\r\n\r\nconst wineryBookingSchema = new Schema<WineryBooking>(\r\n  {\r\n    wineryId: { type: Schema.Types.ObjectId, required: true, ref: \"Winery\" },\r\n    datetime: { type: Date, required: true },\r\n    tasting: { type: Number, default: null },\r\n    tour: { type: Number, default: null },\r\n    foodPairings: { type: [foodPairingSchema], default: [] },\r\n  },\r\n  { _id: false }\r\n);\r\n\r\ninterface Booking {\r\n  userId: mongoose.Types.ObjectId;\r\n  wineries: WineryBooking[];\r\n  specialRequests?: string;\r\n  status?: \"pending\" | \"confirmed\" | \"cancelled\";\r\n  payment_method: string;\r\n\r\n}\r\n\r\nconst bookingSchema = new Schema<Booking>(\r\n  {\r\n    userId: { type: Schema.Types.ObjectId, required: true, ref: \"User\" },\r\n    wineries: { type: [wineryBookingSchema], required: true },\r\n    specialRequests: { type: String },\r\n    status: { type: String, default: \"pending\", enum: [\"pending\", \"confirmed\", \"cancelled\"] },\r\n    payment_method: { type: String, default: \"pay_winery\" }\r\n\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst BookingModel = models.Booking || model<Booking>(\"Booking\", bookingSchema);\r\n\r\nexport default BookingModel;"],"names":[],"mappings":";;;AAAA;;AAcA,MAAM,oBAAoB,IAAI,yGAAA,CAAA,SAAM,CAClC;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,SAAS;IAAE;AACpD,GACA;IAAE,KAAK;AAAM;AAGf,MAAM,sBAAsB,IAAI,yGAAA,CAAA,SAAM,CACpC;IACE,UAAU;QAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,UAAU;QAAM,KAAK;IAAS;IACvE,UAAU;QAAE,MAAM;QAAM,UAAU;IAAK;IACvC,SAAS;QAAE,MAAM;QAAQ,SAAS;IAAK;IACvC,MAAM;QAAE,MAAM;QAAQ,SAAS;IAAK;IACpC,cAAc;QAAE,MAAM;YAAC;SAAkB;QAAE,SAAS,EAAE;IAAC;AACzD,GACA;IAAE,KAAK;AAAM;AAYf,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAC9B;IACE,QAAQ;QAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,QAAQ;QAAE,UAAU;QAAM,KAAK;IAAO;IACnE,UAAU;QAAE,MAAM;YAAC;SAAoB;QAAE,UAAU;IAAK;IACxD,iBAAiB;QAAE,MAAM;IAAO;IAChC,QAAQ;QAAE,MAAM;QAAQ,SAAS;QAAW,MAAM;YAAC;YAAW;YAAa;SAAY;IAAC;IACxF,gBAAgB;QAAE,MAAM;QAAQ,SAAS;IAAa;AAExD,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,eAAe,yGAAA,CAAA,SAAM,CAAC,OAAO,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAW,WAAW;uCAElD"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/models/user.model.ts"],"sourcesContent":["import { Schema, model, models, Document, Model } from \"mongoose\";\r\nimport bcrypt from \"bcrypt\";\r\n\r\nexport interface IUser {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  dateOfBirth?: Date;\r\n  createdAt: Date;\r\n  role: string;\r\n  comparePassword(candidatePassword: string): Promise<boolean>;\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>(\r\n  {\r\n    name: { type: String, required: true, trim: true },\r\n    email: { type: String, required: true, unique: true, trim: true, lowercase: true },\r\n    password: { type: String, required: true },\r\n    dateOfBirth: { type: Date },\r\n    role: { type: String, default: \"winery\", enum: [\"admin\", \"winery\"] },\r\n    createdAt: { type: Date, default: Date.now },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nUserSchema.pre(\"save\", async function (next) {\r\n  if (!this.isModified(\"password\")) return next();\r\n  try {\r\n    const salt = await bcrypt.genSalt(10);\r\n    this.password = await bcrypt.hash(this.password, salt);\r\n    next();\r\n  } catch (err: any) {\r\n    next(err);\r\n  }\r\n});\r\n\r\nUserSchema.methods.comparePassword = async function (candidatePassword: string) {\r\n  return bcrypt.compare(candidatePassword, this.password);\r\n};\r\n\r\nconst User: Model<IUser> = models.User || model<IUser>(\"User\", UserSchema);\r\n\r\nexport default User;\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAYA,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAC3B;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;QAAM,MAAM;IAAK;IACjD,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;QAAM,MAAM;QAAM,WAAW;IAAK;IACjF,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,aAAa;QAAE,MAAM;IAAK;IAC1B,MAAM;QAAE,MAAM;QAAQ,SAAS;QAAU,MAAM;YAAC;YAAS;SAAS;IAAC;IACnE,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C,GACA;IAAE,YAAY;AAAK;AAGrB,WAAW,GAAG,CAAC,QAAQ,eAAgB,IAAI;IACzC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,OAAO;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,MAAM,qGAAA,CAAA,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;QACjD;IACF,EAAE,OAAO,KAAU;QACjB,KAAK;IACP;AACF;AAEA,WAAW,OAAO,CAAC,eAAe,GAAG,eAAgB,iBAAyB;IAC5E,OAAO,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,mBAAmB,IAAI,CAAC,QAAQ;AACxD;AAEA,MAAM,OAAqB,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAS,QAAQ;uCAEhD"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/models/winery.model.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\n// FoodPairingOption Schema\r\nconst FoodPairingOptionSchema = new mongoose.Schema({\r\n  id: { type: String, required: true, default: () => crypto.randomUUID() },\r\n  name: { type: String, required: true },\r\n  price: { type: Number, required: true, min: 0 },\r\n});\r\n\r\n// Tours Schema\r\nconst ToursSchema = new mongoose.Schema({\r\n  available: { type: Boolean, default: false },\r\n  tour_price: { type: Number, default: 0, min: 0 },\r\n  tour_options: [\r\n    {\r\n      description: { type: String, required: true },\r\n      cost: { type: Number, required: true, min: 0 },\r\n      tour_id: { type: String }, // Optional\r\n    },\r\n  ],\r\n});\r\n\r\n// WineDetail Schema\r\nconst WineDetailSchema = new mongoose.Schema({\r\n  id: { type: String, required: true, default: () => crypto.randomUUID() },\r\n  name: { type: String, required: true },\r\n  description: { type: String, required: true },\r\n  year: { type: Number },\r\n  tasting_notes: { type: String },\r\n  photo: { type: String },\r\n});\r\n\r\n// BookingInfo Schema\r\nconst BookingInfoSchema = new mongoose.Schema({\r\n  booking_enabled: { type: Boolean, default: false },\r\n  max_guests_per_slot: { type: Number, min: 0 },\r\n  number_of_people: [{ type: Number, min: 0 }],\r\n  dynamic_pricing: {\r\n    enabled: { type: Boolean, default: false },\r\n    weekend_multiplier: { type: Number, min: 0 },\r\n  },\r\n  available_slots: [{ type: String }],\r\n  external_booking_link: { type: String },\r\n});\r\n\r\n// OtherFeature Schema\r\nconst OtherFeatureSchema = new mongoose.Schema({\r\n  description: { type: String, required: true },\r\n  cost: { type: Number, required: true, min: 0 },\r\n  feature_id: { type: String },\r\n});\r\n\r\n// TastingInfo Schema\r\nconst TastingInfoSchema = new mongoose.Schema({\r\n  tasting_title: { type: String, required: true },\r\n  tasting_description: { type: String, required: true },\r\n  ava: { type: String },\r\n  tasting_price: { type: Number, required: true, min: 0 },\r\n  available_times: [{ type: String }],\r\n  wine_types: [{ type: String }],\r\n  number_of_wines_per_tasting: { type: Number, min: 1, default: 1 },\r\n  special_features: [{ type: String }],\r\n  images: [{ type: String }],\r\n  food_pairing_options: [FoodPairingOptionSchema],\r\n  tours: ToursSchema,\r\n  wine_details: [WineDetailSchema],\r\n  booking_info: BookingInfoSchema,\r\n  other_features: [OtherFeatureSchema],\r\n});\r\n\r\n// Winery Schema\r\nconst WinerySchema = new mongoose.Schema({\r\n  name: { type: String, required: true },\r\n  location: {\r\n    address: { type: String, required: true },\r\n    latitude: { type: Number, required: true },\r\n    longitude: { type: Number, required: true },\r\n    is_mountain_location: { type: Boolean, required: true },\r\n  },\r\n  contact_info: {\r\n    phone: { type: String },\r\n    email: { type: String },\r\n    website: { type: String },\r\n  },\r\n  description: { type: String },\r\n  tasting_info: [TastingInfoSchema],\r\n  amenities: {\r\n    virtual_sommelier: { type: Boolean, default: false },\r\n    augmented_reality_tours: { type: Boolean, default: false },\r\n    handicap_accessible: { type: Boolean, default: false },\r\n  },\r\n  user_reviews: [\r\n    {\r\n      review_id: { type: String },\r\n      user_id: { type: String },\r\n      rating: { type: Number, min: 0, max: 5 },\r\n      comment: { type: String },\r\n    },\r\n  ],\r\n  transportation: {\r\n    uber_availability: { type: Boolean, default: false },\r\n    lyft_availability: { type: Boolean, default: false },\r\n    distance_from_user: { type: Number, min: 0 },\r\n  },\r\n  owner: { type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true },\r\n});\r\n\r\n// Check if the model is already defined\r\nconst Winery = mongoose.models.Winery || mongoose.model(\"Winery\", WinerySchema);\r\n\r\nexport default Winery;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 715, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/lib/email.ts"],"sourcesContent":["import nodemailer from \"nodemailer\";\r\nimport UserModel from \"@/models/user.model\";\r\n\r\n// Configure Mailtrap SMTP transport\r\nconst transporter = nodemailer.createTransport({\r\n  host: process.env.MAILTRAP_HOST as string,\r\n  port: parseInt(process.env.MAILTRAP_PORT as string, 10),\r\n  auth: {\r\n    user: process.env.MAILTRAP_USER as string,\r\n    pass: process.env.MAILTRAP_PASS as string,\r\n  },\r\n} as nodemailer.TransportOptions);\r\n\r\n// Email Header\r\nconst EmailHeader = (subject: string) => `\r\n  <table style=\"width:100%;\">\r\n    <tbody>\r\n      <tr>\r\n        <td valign=\"top\">\r\n          <table class=\"es-header\" align=\"center\" style=\"width:100%;\">\r\n            <tbody>\r\n              <tr>\r\n                <td align=\"center\">\r\n                  <table class=\"es-header-body\" style=\"width:600px;\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td align=\"left\" style=\"padding:10px;\">\r\n                          <table style=\"width:100%;\">\r\n                            <tbody>\r\n                              <tr>\r\n                                <td valign=\"top\" align=\"center\" style=\"width:560px;\">\r\n                                  <a href=\"${process.env.NEXTAUTH_URL || \"https://yourplatform.com\"}\" target=\"_blank\" style=\"display: flex; align-items: center; text-decoration: none;\">\r\n                                    <img src=\"${process.env.NEXTAUTH_URL || \"https://yourplatform.com\"}/logo.png\" width=\"25\" height=\"25\" alt=\"NVW Logo\" style=\"border:0; margin-right: 12px;\">\r\n                                    <div style=\"display: flex; flex-direction: column;\">\r\n                                      <span style=\"font-family: serif; font-size: 36px; font-weight: 800; color: #1a202c; line-height: 1.2;\">NVW</span>\r\n                                      <small style=\"font-family: serif; font-size: 12px; color: #6b7280; line-height: 1.2;\">Napa Valley Winery</small>\r\n                                    </div>\r\n                                  </a>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n`;\r\n\r\n// Email Content Wrapper (Assumed implementation)\r\nconst EmailContentWrapper = (content: string) => `\r\n  <table style=\"width:100%;\">\r\n    <tbody>\r\n      <tr>\r\n        <td align=\"center\">\r\n          <table style=\"width:600px; background-color:#ffffff; padding:20px; border-radius:8px;\">\r\n            <tbody>\r\n              <tr>\r\n                <td style=\"font-family: Arial, Helvetica, sans-serif; font-size:14px; color:#0e0e0e;\">\r\n                  ${content}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n`;\r\n\r\n// Email Footer (Assumed implementation)\r\nconst EmailFooter = () => `\r\n  <table style=\"width:100%;\">\r\n    <tbody>\r\n      <tr>\r\n        <td align=\"center\">\r\n          <table style=\"width:600px; padding:10px;\">\r\n            <tbody>\r\n              <tr>\r\n                <td style=\"font-family: Arial, Helvetica, sans-serif; font-size:12px; color:#666666;\">\r\n                  <p>© ${new Date().getFullYear()} ${process.env.NEXT_PUBLIC_SITE_NAME || \"NVW\"}. All rights reserved.</p>\r\n                  <p>Contact us at <a href=\"mailto:support@${process.env.NEXT_PUBLIC_SITE_NAME?.toLowerCase() || \"nvw\"}.com\">support@${process.env.NEXT_PUBLIC_SITE_NAME?.toLowerCase() || \"nvw\"}.com</a></p>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n`;\r\n\r\n// Email Template Wrapper\r\nconst EmailTemplate = ({ content, subject }: { content: string; subject: string }) => `\r\n  <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n  <html dir=\"ltr\" xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\r\n      <meta name=\"x-apple-disable-message-reformatting\">\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n      <meta content=\"telephone=no\" name=\"format-detection\">\r\n      <title>${subject}</title>\r\n      <style type=\"text/css\">\r\n        body {\r\n          background-color:#F5F9FF;\r\n          font-family: Arial, Helvetica, sans-serif;\r\n          margin: 0;\r\n          padding: 0;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body style=\"margin:0;padding:0;width:100%;\">\r\n      <div>\r\n        ${EmailHeader(subject)}\r\n        ${EmailContentWrapper(content)}\r\n        ${EmailFooter()}\r\n      </div>\r\n    </body>\r\n  </html>\r\n`;\r\n\r\n// Email templates\r\nconst getCustomerEmailTemplate = (booking: any, status: string) => {\r\n  const content = `\r\n    <p style=\"font-size:20px;color:#0e0e0e;\">Dear ${booking.customerName},</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">Your booking with ${booking.wineryName} has been ${status}.</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">Booking Details:</p>\r\n    <ul style=\"font-size:14px;color:#0e0e0e;\">\r\n      <li>Date: ${new Date(booking.date).toLocaleDateString()}</li>\r\n      <li>Time: ${booking.time}</li>\r\n    </ul>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">Thank you for using our platform!</p>\r\n  `;\r\n  return EmailTemplate({ content, subject: `Booking ${status} - ${booking.wineryName}` });\r\n};\r\n\r\nconst getWineryEmailTemplate = (booking: any, status: string) => {\r\n  const content = `\r\n    <p style=\"font-size:20px;color:#0e0e0e;\">Dear ${booking.wineryName} Team,</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">A booking has been ${status}.</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">Booking Details:</p>\r\n    <ul style=\"font-size:14px;color:#0e0e0e;\">\r\n      <li>Customer: ${booking.customerName}</li>\r\n      <li>Date: ${new Date(booking.date).toLocaleDateString()}</li>\r\n      <li>Time: ${booking.time}</li>\r\n    </ul>\r\n  `;\r\n  return EmailTemplate({ content, subject: `Booking ${status} Notification` });\r\n};\r\n\r\nconst getAdminEmailTemplate = (booking: any, status: string) => {\r\n  const content = `\r\n    <p style=\"font-size:20px;color:#0e0e0e;\">Booking Status Update Notification</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">Booking ID: ${booking._id}</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">A booking has been ${status}.</p>\r\n    <p style=\"font-size:14px;color:#0e0e0e;padding-top:20px;\">Details:</p>\r\n    <ul style=\"font-size:14px;color:#0e0e0e;\">\r\n      <li>Winery: ${booking.wineryName}</li>\r\n      <li>Customer: ${booking.customerName}</li>\r\n      <li>Date: ${new Date(booking.date).toLocaleDateString()}</li>\r\n      <li>Time: ${booking.time}</li>\r\n    </ul>\r\n  `;\r\n  return EmailTemplate({ content, subject: `Admin: Booking ${status} - ${booking._id}` });\r\n};\r\n\r\n// Send emails for a single winery booking\r\nexport async function sendBookingEmails(booking: any, winery: any, user: any, status: string) {\r\n  try {\r\n    // Validate inputs\r\n    if (!user?.email) throw new Error(\"User email is missing\");\r\n    if (!winery?.wineryEmail) throw new Error(`Winery email is missing for winery ID: ${winery.wineryId}`);\r\n    if (!winery?.datetime) throw new Error(`Datetime is missing for winery ID: ${winery.wineryId}`);\r\n\r\n    const [date, time] = winery.datetime.split(\"T\"); // Split ISO datetime\r\n    if (!date || !time) throw new Error(`Invalid datetime format: ${winery.datetime}`);\r\n\r\n    const emailData = {\r\n      _id: booking._id,\r\n      customerName: user.name || \"Customer\",\r\n      customerEmail: user.email,\r\n      wineryName: winery.wineryName || \"Unknown Winery\",\r\n      wineryEmail: winery.wineryEmail,\r\n      date: date,\r\n      time: time.split(\":\").slice(0, 2).join(\":\"), // Extract HH:mm\r\n    };\r\n\r\n    // Fetch admin users\r\n    const adminUsers = await UserModel.find({ role: \"admin\" }).select(\"email\");\r\n    if (!adminUsers.length) {\r\n      console.warn(\"No admin users found for sending admin emails\");\r\n    }\r\n\r\n    const emails = [\r\n      {\r\n        to: emailData.customerEmail,\r\n        subject: `Booking ${status} - ${emailData.wineryName}`,\r\n        html: getCustomerEmailTemplate(emailData, status),\r\n      },\r\n      {\r\n        to: emailData.wineryEmail,\r\n        subject: `Booking ${status} Notification`,\r\n        html: getWineryEmailTemplate(emailData, status),\r\n      },\r\n      ...adminUsers.map((admin) => ({\r\n        to: admin.email,\r\n        subject: `Admin: Booking ${status} - ${emailData._id}`,\r\n        html: getAdminEmailTemplate(emailData, status),\r\n      })),\r\n    ].filter(email => email.to); // Filter out any undefined emails\r\n\r\n    const emailResults = await Promise.all(\r\n      emails.map((email) =>\r\n        transporter.sendMail({\r\n          from: process.env.EMAIL_FROM,\r\n          ...email,\r\n        }).then((info) => ({ status: \"success\", to: email.to, messageId: info.messageId }))\r\n          .catch((error) => ({ status: \"error\", to: email.to, error: error.message }))\r\n      )\r\n    );\r\n\r\n    console.log(\"Email sending results:\", emailResults);\r\n    return emailResults;\r\n  } catch (error: any) {\r\n    console.error(`Error in sendBookingEmails for winery ID ${winery.wineryId}:`, error);\r\n    return [{ status: \"error\", error: error.message || String(error) }];\r\n  }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":["file://E%3A/nvm/src/app/api/itinerary/book/route.ts"],"sourcesContent":["import { getUserIdFromToken } from \"@/lib/auth\";\r\nimport { dbConnect } from \"@/lib/dbConnect\";\r\nimport BookingModel from \"@/models/booking.model\";\r\nimport UserModel from \"@/models/user.model\"; // Assuming you have a UserModel\r\nimport WineryModel from \"@/models/winery.model\"; // Assuming you have a WineryModel\r\nimport { Types } from \"mongoose\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { sendBookingEmails } from \"@/lib/email\";\r\n\r\n\r\nexport async function POST(req: NextRequest) {\r\n  try {\r\n    const userId = await getUserIdFromToken();\r\n    if (!userId) return NextResponse.json({ message: \"Unauthorized\" }, { status: 401 });\r\n\r\n    await dbConnect();\r\n\r\n    const { data } = await req.json();\r\n    if (!Array.isArray(data) || data.length === 0) {\r\n      return NextResponse.json({ message: \"Invalid booking data\" }, { status: 400 });\r\n    }\r\n\r\n    const user = await UserModel.findById(userId).select(\"name email\");\r\n    if (!user) {\r\n      return NextResponse.json({ message: \"User not found\" }, { status: 404 });\r\n    }\r\n\r\n    const booking = new BookingModel({ userId, payment_method: \"pay_winery\" });\r\n    booking.wineries = data.map((winery) => ({\r\n      wineryId: winery.wineryId,\r\n      datetime: winery.dateTime,\r\n      tasting: winery.tasting,\r\n      tour: winery.tour,\r\n      foodPairings: winery.foodPairings,\r\n    }));\r\n    await booking.save();\r\n    for (const winery of data) {\r\n      const wineryDetails = await WineryModel.findById(winery.wineryId).select(\"name contact_info.email\");\r\n      if (wineryDetails) {\r\n        await sendBookingEmails(booking.toJSON(), {\r\n          wineryId: winery.wineryId,\r\n          datetime: winery.dateTime,\r\n          wineryName: wineryDetails.name,\r\n          wineryEmail: wineryDetails.contact_info?.email,\r\n        }, user, \"pending\");\r\n      } else {\r\n        console.warn(`Winery not found for ID: ${winery.wineryId}`);\r\n      }\r\n    }\r\n\r\n    return NextResponse.json({ message: \"Booking created successfully\", booking: booking.toJSON() }, { status: 201 });\r\n  } catch (error) {\r\n    console.error(\"Error creating booking:\", error);\r\n    return NextResponse.json({ error: \"Server error\" }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    const userId = await getUserIdFromToken();\r\n    if (!userId) return NextResponse.json({ message: \"Unauthorized\" }, { status: 401 });\r\n\r\n    const { searchParams } = new URL(req.url);\r\n    const page = parseInt(searchParams.get(\"page\") || \"1\", 10);\r\n    const limit = parseInt(searchParams.get(\"limit\") || \"10\", 10);\r\n    const skip = (page - 1) * limit;\r\n\r\n    await dbConnect();\r\n\r\n    const bookings = await BookingModel.aggregate([\r\n      { $match: { userId: new Types.ObjectId(userId) } },\r\n      { $unwind: \"$wineries\" },\r\n      {\r\n        $lookup: {\r\n          from: \"wineries\",\r\n          let: { wineryId: \"$wineries.wineryId\" },\r\n          pipeline: [{ $match: { $expr: { $eq: [\"$_id\", { $toObjectId: \"$$wineryId\" }] } } }, { $project: { __v: 0 } }],\r\n          as: \"wineryDetails\",\r\n        },\r\n      },\r\n      { $unwind: { path: \"$wineryDetails\", preserveNullAndEmptyArrays: true } },\r\n      { $addFields: { \"wineries.winery\": \"$wineryDetails\" } },\r\n      {\r\n        $group: {\r\n          _id: \"$_id\",\r\n          userId: { $first: \"$userId\" },\r\n          specialRequests: { $first: \"$specialRequests\" },\r\n          status: { $first: \"$status\" },\r\n          createdAt: { $first: \"$createdAt\" },\r\n          updatedAt: { $first: \"$updatedAt\" },\r\n          wineries: { $push: \"$wineries\" },\r\n          payment_method: { $first: \"$payment_method\" }, // Include payment method in the response\r\n        },\r\n      },\r\n      { $sort: { createdAt: -1 } },\r\n      { $skip: skip },\r\n      { $limit: limit },\r\n    ]);\r\n\r\n    const totalBookings = await BookingModel.countDocuments({ userId });\r\n    return NextResponse.json({\r\n      bookings,\r\n      totalPages: Math.ceil(totalBookings / limit),\r\n      currentPage: page,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching bookings:\", error);\r\n    return NextResponse.json({ error: \"Server error\" }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}